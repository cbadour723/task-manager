{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\Downloads\\\\CodingProjects\\\\MongoDb learning\\\\task-manager\\\\src\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from '../components/TaskForm';\nimport TaskList from '../components/TaskList';\nimport { createTask, deleteTask, getTasks, updateTask } from '../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  useEffect(() => {\n    // Fetch tasks from the backend\n    getTasks().then(setTasks);\n  }, []);\n  const handleSave = task => {\n    if (currentTask) {\n      // Update existing task\n      updateTask(currentTask._id, task).then(updatedTask => {\n        setTasks(tasks.map(t => t._id === updatedTask._id ? updatedTask : t));\n        setCurrentTask(null);\n      });\n    } else {\n      // Add new task\n      createTask(task).then(newTask => {\n        setTasks([...tasks, newTask]);\n      });\n    }\n  };\n  const handleEdit = task => {\n    setCurrentTask(task);\n  };\n  const handleDelete = id => {\n    deleteTask(id).then(() => {\n      setTasks(tasks.filter(task => task._id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      currentTask: currentTask,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"eUvsHR1bWshzapwuP21TEU32xKI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","createTask","deleteTask","getTasks","updateTask","jsxDEV","_jsxDEV","Home","_s","tasks","setTasks","currentTask","setCurrentTask","then","handleSave","task","_id","updatedTask","map","t","newTask","handleEdit","handleDelete","id","filter","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/caleb/Downloads/CodingProjects/MongoDb learning/task-manager/src/client/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport TaskForm from '../components/TaskForm';\r\nimport TaskList from '../components/TaskList';\r\nimport { createTask, deleteTask, getTasks, updateTask } from '../services/taskService';\r\n\r\nconst Home = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks from the backend\r\n    getTasks().then(setTasks);\r\n  }, []);\r\n\r\n  const handleSave = (task) => {\r\n    if (currentTask) {\r\n      // Update existing task\r\n      updateTask(currentTask._id, task).then(updatedTask => {\r\n        setTasks(tasks.map(t => (t._id === updatedTask._id ? updatedTask : t)));\r\n        setCurrentTask(null);\r\n      });\r\n    } else {\r\n      // Add new task\r\n      createTask(task).then(newTask => {\r\n        setTasks([...tasks, newTask]);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setCurrentTask(task);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    deleteTask(id).then(() => {\r\n      setTasks(tasks.filter(task => task._id !== id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TaskForm currentTask={currentTask} onSave={handleSave} />\r\n      <TaskList tasks={tasks} onEdit={handleEdit} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAK,QAAQ,CAAC,CAAC,CAACU,IAAI,CAACH,QAAQ,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIJ,WAAW,EAAE;MACf;MACAP,UAAU,CAACO,WAAW,CAACK,GAAG,EAAED,IAAI,CAAC,CAACF,IAAI,CAACI,WAAW,IAAI;QACpDP,QAAQ,CAACD,KAAK,CAACS,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACH,GAAG,KAAKC,WAAW,CAACD,GAAG,GAAGC,WAAW,GAAGE,CAAE,CAAC,CAAC;QACvEP,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAX,UAAU,CAACc,IAAI,CAAC,CAACF,IAAI,CAACO,OAAO,IAAI;QAC/BV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,UAAU,GAAIN,IAAI,IAAK;IAC3BH,cAAc,CAACG,IAAI,CAAC;EACtB,CAAC;EAED,MAAMO,YAAY,GAAIC,EAAE,IAAK;IAC3BrB,UAAU,CAACqB,EAAE,CAAC,CAACV,IAAI,CAAC,MAAM;MACxBH,QAAQ,CAACD,KAAK,CAACe,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKO,EAAE,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACP,QAAQ;MAACY,WAAW,EAAEA,WAAY;MAACe,MAAM,EAAEZ;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DxB,OAAA,CAACN,QAAQ;MAACS,KAAK,EAAEA,KAAM;MAACsB,MAAM,EAAEV,UAAW;MAACW,QAAQ,EAAEV;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxCID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}